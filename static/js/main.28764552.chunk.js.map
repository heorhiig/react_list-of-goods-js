{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_BY_ABT","SORT_BY_LENGTH","SORT_BY_REVERS","goodsFromServer","isSorted","App","useState","visibleGoods","setVisibleGoods","sortField","setSortField","className","onClick","sort","type","cn","good1","good2","length","reverse","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAc,eACdC,EAAiB,SACjBC,EAAiB,UAEVC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGEC,GAAW,EAEFC,EAAM,WACjB,MAAwCC,mBAASH,GAAjD,mBAAOI,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAgCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAlCU,WAChBJ,EACE,YAAID,GAAcM,OAClBH,EAAaV,GACbI,GAAW,IA+BPU,KAAK,SACLH,UAAWI,IAAG,iBACZ,CAAE,WAAYN,IAAcT,IAJhC,iCASA,wBACEY,QAnCa,WACnBJ,EACE,YAAID,GAAcM,MAAK,SAACG,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAC9DR,EAAaT,GACbG,GAAW,IAgCPU,KAAK,SACLH,UAAWI,IAAG,oBACZ,CAAE,WAAYN,IAAcR,IAJhC,4BASA,wBACEW,QApCQ,WACdJ,EACE,YAAID,GAAcY,UAClBT,EAAaR,GACbE,GAAW,IAiCPU,KAAK,SACLH,UAAWI,IAAG,oBACZ,CAAE,WAAYN,IAAcP,IAJhC,qBASCE,GACC,wBACEQ,QAtCI,WACZJ,EAAgBL,EACdO,EAAa,MACbN,GAAW,IAoCLU,KAAK,SACLH,UAAU,4BAHZ,sBAWJ,6BACGJ,EAAaa,KAAI,SAACC,EAAMC,GAAP,OAChB,oBAAI,UAAQ,OAAZ,SAAoBD,aCnG9BE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28764552.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nconst SORT_BY_ABT = 'alphabetical';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_REVERS = 'reverse';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nlet isSorted = false;\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [sortField, setSortField] = useState('');\n\n  const sortByAbt = () => {\n    setVisibleGoods(\n      [...visibleGoods].sort(),\n      setSortField(SORT_BY_ABT),\n      isSorted = true,\n    );\n  };\n\n  const sortByLength = () => {\n    setVisibleGoods(\n      [...visibleGoods].sort((good1, good2) => good1.length - good2.length),\n      setSortField(SORT_BY_LENGTH),\n      isSorted = true,\n    );\n  };\n\n  const reverse = () => {\n    setVisibleGoods(\n      [...visibleGoods].reverse(),\n      setSortField(SORT_BY_REVERS),\n      isSorted = true,\n    );\n  };\n\n  const reset = () => {\n    setVisibleGoods(goodsFromServer,\n      setSortField(null),\n      isSorted = false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={sortByAbt}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_BY_ABT })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={sortByLength}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={reverse}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': sortField !== SORT_BY_REVERS })}\n        >\n          Reverse\n        </button>\n\n        {isSorted && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {visibleGoods.map((good, index) => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}