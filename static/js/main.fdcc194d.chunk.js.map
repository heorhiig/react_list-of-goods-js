{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_BY_ABT","SORT_BY_LENGTH","SORT_BY_REVERS","goodsFromServer","App","useState","visibleGoods","setVisibleGoods","sortField","goods","preparedGoods","sortGoods","sort","good1","good2","localeCompare","length","reverse","getParameterGood","className","onClick","type","cn","map","good","index","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAc,eACdC,EAAiB,SACjBC,EAAiB,UAEVC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8BK,IAAMC,EAAM,WACjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EA7BR,SAA0BC,EAAOH,GAC/B,IAAII,EAAa,YAAOD,GAElBE,EAAYD,EAAcE,MAAK,SAACC,EAAOC,GAC3C,OAAQR,GACN,KAAKN,EAEH,OAAOa,EAAME,cAAcD,GAC7B,KAAKb,EAEH,OAAOY,EAAMG,OAASF,EAAME,OAC9B,KAAKd,EAGH,OAFAQ,EAAcO,UAEP,EACT,QACE,OAAO,MAQb,OAJIX,IAAiBJ,IACnBQ,EAAgBA,EAAcO,WAGzBN,EAKWO,CAAiBf,EAAiBG,GAEpD,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAgBP,IAC/BqB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYhB,IAAiBN,IAJnC,iCASA,wBACEoB,QAAS,kBAAMb,EAAgBN,IAC/BoB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAiBL,IAJnC,4BASA,wBACEmB,QAAS,kBAAMb,EAAgBL,IAC/BmB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAiBJ,IAJnC,qBASCI,GACC,wBACEc,QAAS,kBAAMb,EAAgB,KAC/Bc,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,6BACGX,EAAUe,KAAI,SAACC,EAAMC,GAAP,OACb,oBAAe,UAAQ,OAAvB,SAA+BD,GAAtBA,YC9FnBE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fdcc194d.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nconst SORT_BY_ABT = 'alphabetical';\nconst SORT_BY_LENGTH = 'length';\nconst SORT_BY_REVERS = 'reverse';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nfunction getParameterGood(goods, visibleGoods) {\n  let preparedGoods = [...goods];\n\n  const sortGoods = preparedGoods.sort((good1, good2) => {\n    switch (visibleGoods) {\n      case SORT_BY_ABT:\n\n        return good1.localeCompare(good2);\n      case SORT_BY_LENGTH:\n\n        return good1.length - good2.length;\n      case SORT_BY_REVERS:\n        preparedGoods.reverse();\n\n        return 0;\n      default:\n        return 0;\n    }\n  });\n\n  if (visibleGoods === SORT_BY_REVERS) {\n    preparedGoods = preparedGoods.reverse();\n  }\n\n  return sortGoods;\n}\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState('');\n  const sortField = getParameterGood(goodsFromServer, visibleGoods);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setVisibleGoods(SORT_BY_ABT)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': visibleGoods !== SORT_BY_ABT })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setVisibleGoods(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': visibleGoods !== SORT_BY_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setVisibleGoods(SORT_BY_REVERS)}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': visibleGoods !== SORT_BY_REVERS })}\n        >\n          Reverse\n        </button>\n\n        {visibleGoods && (\n          <button\n            onClick={() => setVisibleGoods('')}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {sortField.map((good, index) => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}